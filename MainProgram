import time

# Defining the grid size as instructed with it being 12x12
GRID_SIZE = 24

# Function to check if a coordinate is within the grid
def is_valid_coordinate(x, y):
    return 0 <= x < GRID_SIZE and 0 <= y < GRID_SIZE

# Function to display a live grid
def display_grid(grid):
    for row in grid:
        print(' '.join(str(x) for x in row))

# Function to execute the route instructions
def execute_route_instructions(start_x, start_y, instructions):
    grid = [[0 for _ in range (20)] for _ in range (20)]

    grid[start_x][start_y] = 'S'
    
    current_x, current_y = start_x, start_y
    for instruction in instructions:
        if instruction == 'N':
            current_x -= 1
        elif instruction == 'S':
            current_x += 1
        elif instruction == 'E':
            current_y += 1
        elif instruction == 'W':
            current_y -= 1
        if is_valid_coordinate(current_x, current_y):
            grid[current_x][current_y] = 'X'
        else:
            print('Error: Instruction {} takes the drone outside the grid.'.format(instruction))
            return None
        grid[current_x][current_y] = 'E'
        display_grid(grid)
    route_coordinates = [(x, y) for x in range(GRID_SIZE) for y in range(GRID_SIZE) if grid[x][y] == 'X' or grid[x][y] == 'E']
    print('Route Coordinates:', route_coordinates)
    return route_coordinates

# Main program
print("Drone Guidance System will initiate in:")
for i in range(5, 0, -1):
    print(i)
    time.sleep(1)
print("Initiating drone guidance system...")

filename = input('Enter the filename of the route instruction file: ')
while filename != 'STOP':
    with open(filename, 'r') as f:
        lines = f.readlines()
    start_x, start_y = map(int, lines[0].split())
    instructions = lines[1].strip()
    route = execute_route_instructions(start_x, start_y, instructions)
    if route is None:
        print('Route is not Valid')
    else:
        print('Route is Valid')
    filename = input('Enter the filename of the next route instruction file or enter STOP to finish: ')
print('Drone Guidance System has been Stopped')


print(lines)
print(len(lines))
